<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
  Copyright 2019 Mountain Fog, Inc.
  
  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License.  You may obtain a copy
  of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<xs:schema 
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://www.mtnfog.com" 
	targetNamespace="http://www.mtnfog.com"
	elementFormDefault="qualified">
	
	<xs:element name="trainingdefinition">
        <xs:complexType>
			<xs:all>		
				<xs:element name="algorithm">
					<xs:complexType>
						<xs:attribute name="name" type="xs:string" default="perceptron" />
						<xs:attribute name="cutoff" type="xs:nonNegativeInteger" default="0" />
						<xs:attribute name="iterations" type="xs:nonNegativeInteger" default="100" />
						<xs:attribute name="threads" type="xs:nonNegativeInteger" default="2" />
						<!-- Attributes specific to MaxEntQN -->
						<xs:attribute name="l1" type="xs:decimal" default="0.1" />
						<xs:attribute name="l2" type="xs:decimal" default="0.1" />
						<xs:attribute name="m" type="xs:nonNegativeInteger" default="15" />
						<xs:attribute name="max" type="xs:nonNegativeInteger" default="30000" />
						<!-- Attributes specific to deep learning model -->
						<xs:attribute name="windowSize" type="xs:nonNegativeInteger" default="5" />
						<xs:attribute name="vectors" type="xs:string" />
					</xs:complexType>
				</xs:element>			
				<xs:element name="trainingdata">
					<xs:complexType>
						<xs:attribute name="file" type="xs:string" use="required" />
						<xs:attribute name="format" type="xs:string" default="opennlp" />
						<xs:attribute name="annotations" type="xs:string" />
					</xs:complexType>
				</xs:element>
				<xs:element name="evaluationdata">
					<xs:complexType>
						<xs:attribute name="file" type="xs:string" use="required" />
						<xs:attribute name="format" type="xs:string" default="opennlp" />
						<xs:attribute name="annotations" type="xs:string" />
					</xs:complexType>
				</xs:element>
				<xs:element name="model">
					<xs:complexType>
						<xs:attribute name="name" type="xs:string" use="required" />
						<xs:attribute name="file" type="xs:string" use="required" />
						<xs:attribute name="encryptionkey" type="xs:string" default="none" />
						<xs:attribute name="language" type="xs:string" use="required" />
						<xs:attribute name="type" type="xs:string" use="required" />
					</xs:complexType>
				</xs:element>
				<xs:element name="features">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="generators">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="cache">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="generators" type="generators" />
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:all>
		</xs:complexType>
    </xs:element>
    
    <!-- Define the generators here. -->
	<xs:complexType name="generators">
		<xs:sequence>
			<xs:element name="window" minOccurs="0" maxOccurs="2">
				<xs:complexType>
					<xs:all>																
						<xs:element type="xs:string" name="tokenclass" minOccurs="0" maxOccurs="1" />
						<xs:element type="xs:string" name="token" minOccurs="0" maxOccurs="1" />
					</xs:all>															
					<xs:attribute type="xs:byte" name="prevLength" use="optional" />
					<xs:attribute type="xs:byte" name="nextLength" use="optional" />
				</xs:complexType>
			</xs:element>													
			<xs:element type="xs:string" name="definition" minOccurs="0" maxOccurs="1" />
			<xs:element type="xs:string" name="prevmap" minOccurs="0" maxOccurs="1" />
			<xs:element type="xs:string" name="bigram" minOccurs="0" maxOccurs="1" />
			<xs:element type="xs:string" name="tokenclass" minOccurs="0" maxOccurs="1" />
			<xs:element type="xs:string" name="token" minOccurs="0" maxOccurs="1" />
			<xs:element name="sentence" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute type="xs:string" name="begin" />
							<xs:attribute type="xs:string" name="end" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
  		</xs:sequence>
	</xs:complexType>
    
</xs:schema>
